{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["class Game {\r\n    constructor(cars, orders, selector) {\r\n        this.fps = 60;\r\n        this.canvas = new GameCanvas(selector);\r\n        this.grid = new PF.Grid(this.canvas.width, this.canvas.height);\r\n        this.cars = this.createList(cars, Car);\r\n        this.orders = this.createList(orders, Order);\r\n\r\n        _.each(this.orders, (order) => {\r\n            order.randomDestination(this.canvas.width, this.canvas.height);\r\n            this.findNearestCar(order);\r\n        });\r\n\r\n        this.step();\r\n    }\r\n\r\n    step() {\r\n        this.request = requestAnimationFrame(() => this.timeout = setTimeout(() => this.step(), 1000 / this.fps));\r\n\r\n        _.each(this.cars, (car) => {\r\n            if (!car.path) return;\r\n            let newStep = car.pathStep === undefined ? 0 : car.pathStep + 1;\r\n\r\n            if (newStep >= car.path.length) {\r\n                if (car.back) return car.redraw();\r\n                car.goBack();\r\n                newStep = 0;\r\n            }\r\n\r\n            car.pathStep = newStep;\r\n            car.coordinates = car.path[newStep];\r\n        });\r\n    }\r\n\r\n    createList(count, constructor) {\r\n        return _.reduce(_.range(Math.max(count, 0)), (cars, index) => {\r\n            let Temp = function () {\r\n            };\r\n            Temp.prototype = constructor.prototype;\r\n            let inst = new Temp();\r\n\r\n            let car = constructor.call(inst, index, this);\r\n            car.setRandom(this.canvas.width, this.canvas.height);\r\n            cars.push(car);\r\n            return cars;\r\n        }, []);\r\n    }\r\n\r\n    /**\r\n     * @param {Order} order\r\n     */\r\n    findNearestCar(order) {\r\n        let best = {}, distance;\r\n\r\n        _.each(this.cars, (car) => {\r\n            if (car.order) return;\r\n\r\n            distance = car.coordinates.getDistance(order.coordinates);\r\n            if (!best.distance || best.distance > distance) best = {car, distance};\r\n        });\r\n\r\n        if (best.car) best.car.order = order;\r\n    }\r\n\r\n    destruct() {\r\n        this.cars = [];\r\n        this.orders = [];\r\n        this.grid = null;\r\n        cancelAnimationFrame(this.request);\r\n        clearTimeout(this.timeout);\r\n        this.canvas.clear();\r\n    }\r\n}\r\n\r\nclass IGameObject {\r\n    constructor(index, game) {\r\n        this.index = index;\r\n        this.game = game;\r\n        this.dimensions = IGameObject.defaultDimensions();\r\n        this.coordinates = IGameObject.defaultCoordinates();\r\n        this.color = IGameObject.defaultColor();\r\n    }\r\n\r\n    setRandom(w, h) {\r\n        this.coordinates = Coordinates.random(w, h);\r\n    }\r\n\r\n    set coordinates(newCoordinates) {\r\n        this.game.canvas.setObject(this, newCoordinates);\r\n        this._coordinates = newCoordinates;\r\n    }\r\n\r\n    get coordinates() {\r\n        return this._coordinates || IGameObject.defaultCoordinates();\r\n    }\r\n\r\n    static defaultDimensions() {\r\n        return new Dimensions(5, 5);\r\n    }\r\n\r\n    static defaultCoordinates() {\r\n        return new Coordinates(0, 0);\r\n    }\r\n\r\n    static defaultColor() {\r\n        return '#000';\r\n    }\r\n}\r\n\r\nclass Car extends IGameObject {\r\n    constructor(index, game) {\r\n        super(index, game);\r\n        this.color = 'green';\r\n    }\r\n\r\n    redraw() {\r\n        this.game.canvas.redraw(this);\r\n    }\r\n\r\n    goBack() {\r\n        this.path = this.getPath(this._order.destination);\r\n        this.back = true;\r\n        this.order.taken();\r\n    }\r\n\r\n    set order(order) {\r\n        this._order = order;\r\n        this.color = 'red';\r\n        this.path = this.getPath(this._order.coordinates);\r\n    }\r\n\r\n    get order() {\r\n        return this._order;\r\n    }\r\n\r\n    getPath(destination) {\r\n        return this.coordinates.getPath(destination);\r\n    }\r\n}\r\n\r\nclass Order extends IGameObject {\r\n    constructor(index, game) {\r\n        super(index, game);\r\n        this.color = 'yellow';\r\n    }\r\n\r\n    randomDestination(w, h) {\r\n        this.destination = Coordinates.random(w, h);\r\n    }\r\n\r\n    taken() {\r\n        // очистить клетку\r\n    }\r\n}\r\n\r\nclass Coordinates {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    static defaults() {\r\n        return new Coordinates(0, 0);\r\n    }\r\n\r\n    static random(w, h) {\r\n        return new Coordinates(_.random(0, w), _.random(0, h));\r\n    }\r\n\r\n    /**\r\n     * @param {Coordinates} destination\r\n     */\r\n    getPath(destination) {\r\n        let a = this;\r\n        let b = destination;\r\n        let lastPoint = new Coordinates(a.x, a.y);\r\n        let path = [lastPoint];\r\n        while (lastPoint.x !== b.x || lastPoint.y !== b.y) {\r\n            lastPoint = new Coordinates(getPoint(lastPoint.x, b.x), getPoint(lastPoint.y, b.y));\r\n            path.push(lastPoint);\r\n        }\r\n\r\n        return path;\r\n\r\n        function getPoint(source, destination) {\r\n            if (source == destination) return source;\r\n            return source + (source > destination ? -1 : 1);\r\n        }\r\n    }\r\n\r\n    getDistance(destination) {\r\n        let x = this.x - destination.x;\r\n        let y = this.y - destination.y;\r\n        return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\r\n    }\r\n}\r\n\r\nclass GameCanvas {\r\n    constructor(selector) {\r\n        this._canvas = $(selector).get(0);\r\n        this._context = this._canvas.getContext('2d');\r\n    }\r\n\r\n    clear() {\r\n        var coordinates = new Coordinates(0, 0);\r\n        var dimensions = new Dimensions(this._canvas.width, this._canvas.height);\r\n        this.clearRect(coordinates, dimensions);\r\n    }\r\n\r\n    /**\r\n     * @param {Coordinates} coordinates\r\n     * @param {Dimensions} dimensions\r\n     */\r\n    clearRect(coordinates, dimensions) {\r\n        this._context.clearRect(coordinates.x, coordinates.y, dimensions.width, dimensions.height);\r\n    }\r\n\r\n    get width() {\r\n        return this._canvas.width;\r\n    }\r\n\r\n    get height() {\r\n        return this._canvas.height;\r\n    }\r\n\r\n    /**\r\n     * @param {IGameObject} obj\r\n     * @param {Coordinates} newCoordinates\r\n     */\r\n    setObject(obj, newCoordinates) {\r\n        this.clearRect(obj.coordinates, obj.dimensions);\r\n        this.drawRect(newCoordinates, obj.dimensions, obj.color);\r\n    }\r\n\r\n    /**\r\n     * @param {IGameObject} obj\r\n     */\r\n    redraw(obj) {\r\n        this.drawRect(obj.coordinates, obj.dimensions, obj.color);\r\n    }\r\n\r\n    /**\r\n     * @param {Coordinates} coordinates\r\n     * @param {Dimensions} dimensions\r\n     * @param {String} color\r\n     */\r\n    drawRect(coordinates, dimensions, color) {\r\n        this._context.fillStyle = color;\r\n        this._context.fillRect(coordinates.x, coordinates.y, dimensions.width, dimensions.height);\r\n    }\r\n}\r\n\r\nclass Dimensions {\r\n    constructor(w, h) {\r\n        this.width = w;\r\n        this.height = h;\r\n    }\r\n}\r\n\r\n(function () {\r\n    let game;\r\n    $('#settings').on('submit', function (e) {\r\n        e.preventDefault();\r\n        if (game) game.destruct();\r\n        game = createGame();\r\n    });\r\n\r\n    function createGame() {\r\n        return new Game($('#cars').val(), $('#orders').val(), $('#canvas'));\r\n    }\r\n})();"]}